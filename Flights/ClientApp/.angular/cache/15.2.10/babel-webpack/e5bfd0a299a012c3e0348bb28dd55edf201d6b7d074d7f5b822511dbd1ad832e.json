{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../api/services/passenger.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../auth/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterPassengerComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPassengerComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterPassengerComponent_div_6_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.controls.email.errors);\n  }\n}\nfunction RegisterPassengerComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" First name is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPassengerComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterPassengerComponent_div_12_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.controls.firstName.errors);\n  }\n}\nfunction RegisterPassengerComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Last name is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterPassengerComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, RegisterPassengerComponent_div_17_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls.lastName.errors);\n  }\n}\nexport class RegisterPassengerComponent {\n  constructor(passengerService, fb, authService, router, activatedRoute) {\n    this.passengerService = passengerService;\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.requestedUrl = undefined;\n    this.form = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(254)])],\n      firstName: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.max(40)])],\n      lastName: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.max(40)])],\n      isFemale: [true, Validators.required]\n    });\n    this.login = () => {\n      const emailValue = {\n        email: this.form.get('email')?.value\n      };\n      this.authService.loginUser(emailValue);\n      this.router.navigate([this.requestedUrl ?? '/search-flights']);\n    };\n  }\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(p => this.requestedUrl = p[\"requestedUrl\"]);\n  }\n  //metoda provere Pasosa\n  checkPassenger() {\n    const emailValue = this.form.get('email')?.value; // Dobavljanje vrednosti emaila iz forme\n    if (emailValue !== null && emailValue !== undefined) {\n      // Provera da li je email definisan\n      const params = {\n        email: emailValue\n      }; // Kreiranje objekta sa definisanim emailom\n      this.passengerService.findPassenger(params).subscribe(() => this.login(),\n      // Poziv metode login u uspešnom odgovoru\n      // Poziv metode login u uspešnom odgovoru\n      error => {\n        if (error.status !== 404) {\n          // Obrada greške\n          console.error(error);\n        }\n      });\n    } else {\n      console.error(\"Email is null or undefined\");\n    }\n  }\n  register() {\n    if (this.form.invalid) return;\n    console.log(\"Form Values:\", this.form.value);\n    //ovde pozivamo metodu Login 1\n    this.passengerService.registerPassenger({\n      body: this.form.value\n    }).subscribe(this.login, console.error);\n  }\n  static #_ = this.ɵfac = function RegisterPassengerComponent_Factory(t) {\n    return new (t || RegisterPassengerComponent)(i0.ɵɵdirectiveInject(i1.PassengerService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterPassengerComponent,\n    selectors: [[\"app-register-passenger\"]],\n    decls: 30,\n    vars: 6,\n    consts: [[3, \"formGroup\"], [1, \"container\", \"d-grid\", \"gap-3\", 2, \"max-width\", \"700px\"], [1, \"form-floating\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", \"type\", \"text\", 1, \"form-control\", 3, \"blur\"], [\"for\", \"email\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"d-grid\", \"gap-3\"], [\"formControlName\", \"firstName\", \"type\", \"text\", \"id\", \"firstName\", \"placeholder\", \"First Name\", 1, \"form-control\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"formControlName\", \"lastName\", \"placeholder\", \"Last Name\", \"id\", \"lastName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"LastName\", 1, \"form-label\"], [\"formControlName\", \"isFemale\", \"id\", \"isFemale\", \"type\", \"radio\", 1, \"form-check-input\", 3, \"value\"], [\"for\", \"isFemale\", 1, \"ms-2\", \"form-check-label\"], [1, \"d-flex\", \"justify-content-center\", \"center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-sign-in\"], [1, \"invalid-feedback\", \"d-block\"], [4, \"ngIf\"]],\n    template: function RegisterPassengerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"blur\", function RegisterPassengerComponent_Template_input_blur_3_listener() {\n          return ctx.checkPassenger();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, RegisterPassengerComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 2);\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, RegisterPassengerComponent_div_12_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 2);\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementStart(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, RegisterPassengerComponent_div_17_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementStart(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Female\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelement(23, \"input\", 11);\n        i0.ɵɵelementStart(24, \"label\", 12);\n        i0.ɵɵtext(25, \"Male\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 13)(27, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RegisterPassengerComponent_Template_button_click_27_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(28, \"Login\");\n        i0.ɵɵelement(29, \"i\", 15);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.invalid && (ctx.form.controls.email.dirty || ctx.form.controls.email.touched));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.firstName.invalid && (ctx.form.controls.firstName.dirty || ctx.form.controls.firstName.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.lastName.invalid && (ctx.form.controls.lastName.dirty || ctx.form.controls.lastName.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", false);\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;;ICMhDC,2BAAwC;IACtCA,kCACF;IAAAA,iBAAM;;;;;IAHRA,+BAAwI;IACtIA,kFAEM;IACRA,iBAAM;;;;IAHEA,eAAgC;IAAhCA,wDAAgC;;;;;IAgBpCA,2BAA4C;IAC1CA,uCACF;IAAAA,iBAAM;;;;;IAJRA,+BACmH;IACjHA,mFAEM;IACRA,iBAAM;;;;IAHEA,eAAoC;IAApCA,4DAAoC;;;;;IAY1CA,2BAA2C;IACzCA,sCACF;IAAAA,iBAAM;;;;;IAJRA,+BACgH;IAC9GA,mFAEM;IACRA,iBAAM;;;;IAHEA,eAAmC;IAAnCA,2DAAmC;;;ADxBnD,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,gBAAkC,EAC5CC,EAAe,EACfC,WAAwB,EACxBC,MAAc,EACdC,cAA8B;IAJpB,qBAAgB,GAAhBJ,gBAAgB;IAC1B,OAAE,GAAFC,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IAGtB,iBAAY,GAAYC,SAAS;IAEnC,SAAI,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MACnBC,KAAK,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,OAAO,CAAC,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEd,UAAU,CAACe,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1GC,SAAS,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACY,OAAO,CAAC,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEd,UAAU,CAACiB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACvGC,QAAQ,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACY,OAAO,CAAC,CAACZ,UAAU,CAACa,QAAQ,EAAEb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEd,UAAU,CAACiB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACtGE,QAAQ,EAAE,CAAC,IAAI,EAAEnB,UAAU,CAACa,QAAQ;KACrC,CAAC;IA4CM,UAAK,GAAG,MAAK;MACnB,MAAMO,UAAU,GAAG;QAAET,KAAK,EAAE,IAAI,CAACU,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC;MAAe,CAAE;MACrE,IAAI,CAACjB,WAAW,CAACkB,SAAS,CAACJ,UAAU,CAAC;MACtC,IAAI,CAACb,MAAM,CAACkB,QAAQ,CAAC,CAAC,IAAI,CAACC,YAAY,IAAI,iBAAiB,CAAC,CAAC;IAChE,CAAC;EA1D2C;EAY5CC,QAAQ;IACN,IAAI,CAACnB,cAAc,CAACoB,MAAM,CAACC,SAAS,CAACC,CAAC,IAAI,IAAI,CAACJ,YAAY,GACzDI,CAAC,CAAC,cAAc,CAAC,CAAC;EACtB;EAEA;EACAC,cAAc;IACZ,MAAMX,UAAU,GAAG,IAAI,CAACC,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,CAAC,CAAC;IAElD,IAAIH,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAKX,SAAS,EAAE;MAAE;MACrD,MAAMmB,MAAM,GAAG;QAAEjB,KAAK,EAAES;MAAU,CAAE,CAAC,CAAC;MAEtC,IAAI,CAAChB,gBAAgB,CAClB4B,aAAa,CAACJ,MAAM,CAAC,CACrBC,SAAS,CACR,MAAM,IAAI,CAACI,KAAK,EAAE;MAAE;MACpB;MAAAC,KAAK,IAAG;QACN,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;UAAE;UAC1BC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;;MAExB,CAAC,CACF;KACJ,MAAM;MACLE,OAAO,CAACF,KAAK,CAAC,4BAA4B,CAAC;;EAE/C;EAIAG,QAAQ;IAGN,IAAI,IAAI,CAAChB,IAAI,CAACiB,OAAO,EACnB;IAEFF,OAAO,CAACG,GAAG,CAAC,cAAc,EAAE,IAAI,CAAClB,IAAI,CAACE,KAAK,CAAC;IAE5C;IACA,IAAI,CAACnB,gBAAgB,CAACoC,iBAAiB,CAAC;MAAEC,IAAI,EAAE,IAAI,CAACpB,IAAI,CAACE;IAAK,CAAE,CAAC,CAC/DM,SAAS,CAAC,IAAI,CAACI,KAAK,EAAEG,OAAO,CAACF,KAAK,CAAC;EACzC;EAAC;qBA1DUhC,0BAA0B;EAAA;EAAA;UAA1BA,0BAA0B;IAAAwC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZvC7C,+BAAyB;QAIZA;UAAA,OAAQ8C,oBAAgB;QAAA,EAAC;QAAhC9C,iBAAgH;QAChHA,gCAAmB;QAAAA,qBAAK;QAAAA,iBAAQ;QAEhCA,2EAIM;QAGRA,iBAAM;QACNA,8BAA0B;QAItBA,2BAA8G;QAC9GA,iCAA0C;QAAAA,2BAAU;QAAAA,iBAAQ;QAE5DA,6EAKM;QACRA,iBAAM;QAENA,+BAA2B;QACzBA,4BAA2G;QAC3GA,kCAAyC;QAAAA,0BAAS;QAAAA,iBAAQ;QAE1DA,6EAKM;QACRA,iBAAM;QAGNA,4BAAK;QAEHA,6BAAqG;QACrGA,kCAAoD;QAAAA,uBAAM;QAAAA,iBAAQ;QAEpEA,4BAAK;QACHA,6BAAsG;QACtGA,kCAAoD;QAAAA,qBAAI;QAAAA,iBAAQ;QAIpEA,gCAAkD;QACxCA;UAAA,OAAS8C,cAAU;QAAA,EAAC;QAAuC9C,sBAAK;QAAAA,yBAAgD;QAAAA,iBAAS;;;QAvDjIA,oCAAkB;QAOqBA,eAA+F;QAA/FA,4HAA+F;QAgB9HA,eAA2G;QAA3GA,wIAA2G;QAY3GA,eAAwG;QAAxGA,qIAAwG;QAUrCA,eAAY;QAAZA,4BAAY;QAIZA,eAAa;QAAbA,6BAAa","names":["Validators","i0","RegisterPassengerComponent","constructor","passengerService","fb","authService","router","activatedRoute","undefined","group","email","compose","required","minLength","maxLength","firstName","max","lastName","isFemale","emailValue","form","get","value","loginUser","navigate","requestedUrl","ngOnInit","params","subscribe","p","checkPassenger","findPassenger","login","error","status","console","register","invalid","log","registerPassenger","body","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Anglular\\Flights\\Flights\\ClientApp\\src\\app\\register-passenger\\register-passenger.component.ts","D:\\Anglular\\Flights\\Flights\\ClientApp\\src\\app\\register-passenger\\register-passenger.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PassengerService } from './../api/services/passenger.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\n@Component({\n  selector: 'app-register-passenger',\n  templateUrl: './register-passenger.component.html',\n  styleUrls: ['./register-passenger.component.css']\n})\nexport class RegisterPassengerComponent implements OnInit {\n\n  constructor(private passengerService: PassengerService,\n    private fb: FormBuilder,\n    private authService: AuthService, \n    private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n\n    requestedUrl?: string = undefined;\n\n  form = this.fb.group({\n    email: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(254)])],\r\n    firstName: ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.max(40)])],\r\n    lastName: ['', Validators.compose([Validators.required, Validators.minLength(1), Validators.max(40)])],\r\n    isFemale: [true, Validators.required]\n  })\n\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(p => this.requestedUrl =\r\n      p[\"requestedUrl\"])\r\n  }\n\n  //metoda provere Pasosa\n  checkPassenger(): void {\r\n    const emailValue = this.form.get('email')?.value; // Dobavljanje vrednosti emaila iz forme\r\n\r\n    if (emailValue !== null && emailValue !== undefined) { // Provera da li je email definisan\r\n      const params = { email: emailValue }; // Kreiranje objekta sa definisanim emailom\r\n\r\n      this.passengerService\r\n        .findPassenger(params)\r\n        .subscribe(\r\n          () => this.login(), // Poziv metode login u uspešnom odgovoru\r\n          error => {\r\n            if (error.status !== 404) { // Obrada greške\r\n              console.error(error);\r\n            }\r\n          }\r\n        );\r\n    } else {\r\n      console.error(\"Email is null or undefined\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  register() { //ovo metoda je povezana u html sa dugmetom Login\n\n\r\n    if (this.form.invalid)\r\n      return;\n\n    console.log(\"Form Values:\", this.form.value)\n\r\n    //ovde pozivamo metodu Login 1\r\n    this.passengerService.registerPassenger({ body: this.form.value })\r\n      .subscribe(this.login, console.error)\r\n  }\n\n  private login = () => {\r\n    const emailValue = { email: this.form.get('email')?.value as string };\r\n    this.authService.loginUser(emailValue)\r\n    this.router.navigate([this.requestedUrl ?? '/search-flights']);\r\n  }   \r\n\r\n\r\n}\r\n\r\n\r\n\r\n \n\r\n\r\n \n\n","<form [formGroup]=\"form\">\r\n  <div class=\"container d-grid gap-3\" style=\"max-width: 700px;\">\r\n\r\n    <div class=\"form-floating\">\r\n      <input (blur)=\"checkPassenger()\" formControlName=\"email\" placeholder=\"Email\" class=\"form-control\" type=\"text\" />\r\n      <label for=\"email\">Email</label>\r\n\r\n      <div class=\"invalid-feedback d-block\" *ngIf=\"form.controls.email.invalid && (form.controls.email.dirty || form.controls.email.touched)\">\r\n        <div *ngIf=\"form.controls.email.errors\">\r\n          Email is invalid\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </div>\r\n    <div class=\"d-grid gap-3\">\r\n\r\n      <div class=\"form-floating\">\r\n\r\n        <input formControlName=\"firstName\" class=\"form-control\" type=\"text\" id=\"firstName\" placeholder=\"First Name\" />\r\n        <label class=\"form-label\" for=\"firstName\">First Name</label>\r\n\r\n        <div class=\"invalid-feedback d-block\"\r\n             *ngIf=\"form.controls.firstName.invalid && (form.controls.firstName.dirty || form.controls.firstName.touched)\">\r\n          <div *ngIf=\"form.controls.firstName.errors\">\r\n            First name is invalid\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-floating\">\r\n        <input formControlName=\"lastName\" placeholder=\"Last Name\" class=\"form-control\" id=\"lastName\" type=\"text\" />\r\n        <label class=\"form-label\" for=\"LastName\">Last Name</label>\r\n\r\n        <div class=\"invalid-feedback d-block\"\r\n             *ngIf=\"form.controls.lastName.invalid && (form.controls.lastName.dirty || form.controls.lastName.touched)\">\r\n          <div *ngIf=\"form.controls.lastName.errors\">\r\n            Last name is invalid\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div>\r\n\r\n        <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=true type=\"radio\" />\r\n        <label class=\"ms-2 form-check-label\" for=\"isFemale\">Female</label>\r\n      </div>\r\n      <div>\r\n        <input formControlName=\"isFemale\" id=\"isFemale\" class=\"form-check-input\" [value]=false type=\"radio\" />\r\n        <label class=\"ms-2 form-check-label\" for=\"isFemale\">Male</label>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"d-flex justify-content-center center\">\r\n      <button (click)=\"register()\" type=\"submit\" class=\"btn btn-primary\">Login<i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</form>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}